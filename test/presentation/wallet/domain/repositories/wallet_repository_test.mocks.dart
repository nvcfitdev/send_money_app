// Mocks generated by Mockito 5.4.6 from annotations
// in maya_test_app/test/presentation/wallet/domain/repositories/wallet_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:maya_test_app/core/local/shared_preference_storage.dart' as _i6;
import 'package:maya_test_app/presentation/wallet/data/api/wallet_api.dart'
    as _i4;
import 'package:maya_test_app/presentation/wallet/data/contracts/balance_api_contract.dart'
    as _i2;
import 'package:maya_test_app/presentation/wallet/data/contracts/transaction_api_contract.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBalanceApiContract_0 extends _i1.SmartFake
    implements _i2.BalanceApiContract {
  _FakeBalanceApiContract_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTransactionApiContract_1 extends _i1.SmartFake
    implements _i3.TransactionApiContract {
  _FakeTransactionApiContract_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [WalletApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletApi extends _i1.Mock implements _i4.WalletApi {
  MockWalletApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.BalanceApiContract> getBalance() =>
      (super.noSuchMethod(
            Invocation.method(#getBalance, []),
            returnValue: _i5.Future<_i2.BalanceApiContract>.value(
              _FakeBalanceApiContract_0(
                this,
                Invocation.method(#getBalance, []),
              ),
            ),
          )
          as _i5.Future<_i2.BalanceApiContract>);

  @override
  _i5.Future<List<_i3.TransactionApiContract>> getTransactions() =>
      (super.noSuchMethod(
            Invocation.method(#getTransactions, []),
            returnValue: _i5.Future<List<_i3.TransactionApiContract>>.value(
              <_i3.TransactionApiContract>[],
            ),
          )
          as _i5.Future<List<_i3.TransactionApiContract>>);

  @override
  _i5.Future<_i3.TransactionApiContract> saveTransaction(
    Map<String, dynamic>? transaction,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveTransaction, [transaction]),
            returnValue: _i5.Future<_i3.TransactionApiContract>.value(
              _FakeTransactionApiContract_1(
                this,
                Invocation.method(#saveTransaction, [transaction]),
              ),
            ),
          )
          as _i5.Future<_i3.TransactionApiContract>);
}

/// A class which mocks [SharedPreferenceStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferenceStorage extends _i1.Mock
    implements _i6.SharedPreferenceStorage {
  MockSharedPreferenceStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> clear(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#clear, [key]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> clearAll() =>
      (super.noSuchMethod(
            Invocation.method(#clearAll, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<void> clearAllExcept(Set<String>? keys) =>
      (super.noSuchMethod(
            Invocation.method(#clearAllExcept, [keys]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<Iterable<String>> getKeysWithPrefix(String? prefix) =>
      (super.noSuchMethod(
            Invocation.method(#getKeysWithPrefix, [prefix]),
            returnValue: _i5.Future<Iterable<String>>.value(<String>[]),
          )
          as _i5.Future<Iterable<String>>);

  @override
  _i5.Future<T?> getValue<T>(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getValue, [key]),
            returnValue: _i5.Future<T?>.value(),
          )
          as _i5.Future<T?>);

  @override
  _i5.Future<Iterable<T>> getValues<T>(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getValues, [key]),
            returnValue: _i5.Future<Iterable<T>>.value(<T>[]),
          )
          as _i5.Future<Iterable<T>>);

  @override
  _i5.Future<bool> setValue(String? key, Object? value) =>
      (super.noSuchMethod(
            Invocation.method(#setValue, [key, value]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);
}
