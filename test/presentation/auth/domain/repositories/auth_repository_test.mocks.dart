// Mocks generated by Mockito 5.4.6 from annotations
// in maya_test_app/test/presentation/auth/domain/repositories/auth_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:maya_test_app/core/local/shared_preference_storage.dart' as _i5;
import 'package:maya_test_app/presentation/auth/data/api/auth_api.dart' as _i3;
import 'package:maya_test_app/presentation/auth/domain/entities/auth.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuth_0 extends _i1.SmartFake implements _i2.Auth {
  _FakeAuth_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthApi extends _i1.Mock implements _i3.AuthApi {
  MockAuthApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Auth> login() =>
      (super.noSuchMethod(
            Invocation.method(#login, []),
            returnValue: _i4.Future<_i2.Auth>.value(
              _FakeAuth_0(this, Invocation.method(#login, [])),
            ),
          )
          as _i4.Future<_i2.Auth>);

  @override
  _i4.Future<void> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [SharedPreferenceStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferenceStorage extends _i1.Mock
    implements _i5.SharedPreferenceStorage {
  MockSharedPreferenceStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> clear(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#clear, [key]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<bool> clearAll() =>
      (super.noSuchMethod(
            Invocation.method(#clearAll, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<T?> getValue<T>(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getValue, [key]),
            returnValue: _i4.Future<T?>.value(),
          )
          as _i4.Future<T?>);

  @override
  _i4.Future<Iterable<T>> getValues<T>(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getValues, [key]),
            returnValue: _i4.Future<Iterable<T>>.value(<T>[]),
          )
          as _i4.Future<Iterable<T>>);

  @override
  _i4.Future<bool> setValue(String? key, Object? value) =>
      (super.noSuchMethod(
            Invocation.method(#setValue, [key, value]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}
